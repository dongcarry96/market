plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // mysql 설정
    runtimeOnly 'com.mysql:mysql-connector-j'
    // -- mysql 설정 -----
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.modelmapper:modelmapper:2.4.2'
    // 확장가능한, thread-safe한 Redis 클라이언트다. Redis 통신 프레임워크
    implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE'
    // Redis와 Spring을 통신할 수 있게 해준다.
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //Redisson
    implementation group: 'org.redisson', name: 'redisson-spring-boot-starter', version: '3.23.5'

    // log
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
